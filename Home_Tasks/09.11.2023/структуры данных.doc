Структуры данных


Множество :

Вставка элемента O(1)
Поиск элемента O(1)
Удаление элемента O(1)
Удаление элемента с заданным значением: O(n)

Применение множеств:

Уникальность элементов: Множества используются для хранения уникальных значений, такие как список уникальных идентификаторов.

Проверка принадлежности: Множества помогают проверить, содержится ли элемент в коллекции или нет.

Операции над множествами: Множества могут использоваться для выполнения операций объединения, пересечения и разности множеств.

Массив :

Доступ по индексу: O(1).
Вставка элемента в начало: O(n).
Вставка элемента в середину: O(n).
Удаление элемента из начала: O(n).
Удаление элемента из середины: O(n).
Поиск элемента: O(n).

Применение массивов:

Хранение элементов с постоянной индексацией: Массивы предоставляют быстрый доступ к элементам по индексу.
Использование фиксированного размера: Если размер массива заранее известен и не меняется, массивы эффективны.


Связный Список :

Вставка элемента в начало: O(1).
Вставка элемента в середину: O(1) при доступе к узлу.
Удаление элемента из начала: O(1).
Удаление элемента из середины: O(1) при доступе к узлу.
Поиск элемента: O(n).

Применение стеков:

Вставка и удаление элементов в середине коллекции: Связные списки позволяют вставлять и удалять элементы без необходимости перемещения других элементов.

Реализация структур данных, таких как стек и очередь: Связные списки могут использоваться для создания стеков и очередей, где добавление и удаление элементов происходит с одного конца структуры данных.


Стек :

Добавление элемента (push): O(1).
Извлечение элемента (pop): O(1).
Доступ к верхнему элементу (top): O(1).

Применение стеков:

Реализация стековых алгоритмов: Стеки часто используются для реализации алгоритмов, где операции выполняются в порядке "последний вошел, первый вышел" (Last-In-First-Out, LIFO). 


Операции отмены и возврата: Стеки могут использоваться для отслеживания предыдущих состояний и выполнения операций отмены 

Обработка рекурсии: Рекурсивные вызовы функций хранятся в стеке.

Очередь:

- Добавление нового элемента справа/слева - O(1).
- Удаление элемента справа/слева - O(1).
- Расширение на m элементов справа/слева - O(m).
- Вставка нового элемента в произвольную позицию - O(n).
- Удаление элемента с заданным значением - O(n).

Применение очередей
- Обслуживание нескольких запросов на одном общем ресурсе.
- Управление потоками в многопоточных средах.
- Балансировка нагрузки.
